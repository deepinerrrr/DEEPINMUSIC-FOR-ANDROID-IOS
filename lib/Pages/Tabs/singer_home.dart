class Autogenerated {
  int? code;
  bool? more;
  List<Artists>? artists;

  Autogenerated({this.code, this.more, this.artists});

  Autogenerated.fromJson(Map<String, dynamic> json) {
    code = json['code'];
    more = json['more'];
    // if (json['artists'] != null) {
    //   artists = [];
    //   json['artists'].forEach((v) {
    //     artists!.add(new Artists.fromJson(v));
    //   });
    // }
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['code'] = this.code;
    data['more'] = this.more;
    if (this.artists != null) {
      data['artists'] = this.artists?.map((v) => v.toJson()).toList();
    }
    return data;
  }
}

class Artists {
  var name;
  int? id;
  int? picId;
  int? img1v1Id;
  var briefDesc;
  var picUrl;
  var img1v1Url;
  int? albumSize;
  List<String>? alias;
  var trans;
  int? musicSize;
  int? topicPerson;
  Null? showPrivateMsg;
  Null? isSubed;
  int? accountId;
  var picIdStr;
  var img1v1IdStr;
  List<String>? transNames;
  bool? followed;
  Null? mvSize;
  Null? publishTime;
  Null? identifyTag;
  Null? alg;
  int? fansCount;

  Artists(
      {required this.name,
      required this.id,
      this.picId,
      this.img1v1Id,
      this.briefDesc,
      required this.picUrl,
      this.img1v1Url,
      required this.albumSize,
      required this.alias,
      this.trans,
      required this.musicSize,
      this.topicPerson,
      this.showPrivateMsg,
      this.isSubed,
      this.accountId,
      this.picIdStr,
      this.img1v1IdStr,
      this.transNames,
      this.followed,
      this.mvSize,
      this.publishTime,
      this.identifyTag,
      this.alg,
      this.fansCount});

  Artists.fromJson(Map<String, dynamic> json) {
    name = json['name'];
    id = json['id'];
    picId = json['picId'];
    img1v1Id = json['img1v1Id'];
    briefDesc = json['briefDesc'];
    picUrl = json['picUrl'];
    img1v1Url = json['img1v1Url'];
    albumSize = json['albumSize'];
    alias = json['alias'].cast<String>();
    trans = json['trans'];
    musicSize = json['musicSize'];
    topicPerson = json['topicPerson'];
    showPrivateMsg = json['showPrivateMsg'];
    isSubed = json['isSubed'];
    accountId = json['accountId'];
    picIdStr = json['picId_str'];
    img1v1IdStr = json['img1v1Id_str'];
    transNames = json['transNames'].cast<String>();
    followed = json['followed'];
    mvSize = json['mvSize'];
    publishTime = json['publishTime'];
    identifyTag = json['identifyTag'];
    alg = json['alg'];
    fansCount = json['fansCount'];
  }

  Map<String, dynamic> toJson() {
    final Map<String, dynamic> data = new Map<String, dynamic>();
    data['name'] = this.name;
    data['id'] = this.id;
    data['picId'] = this.picId;
    data['img1v1Id'] = this.img1v1Id;
    data['briefDesc'] = this.briefDesc;
    data['picUrl'] = this.picUrl;
    data['img1v1Url'] = this.img1v1Url;
    data['albumSize'] = this.albumSize;
    data['alias'] = this.alias;
    data['trans'] = this.trans;
    data['musicSize'] = this.musicSize;
    data['topicPerson'] = this.topicPerson;
    data['showPrivateMsg'] = this.showPrivateMsg;
    data['isSubed'] = this.isSubed;
    data['accountId'] = this.accountId;
    data['picId_str'] = this.picIdStr;
    data['img1v1Id_str'] = this.img1v1IdStr;
    data['transNames'] = this.transNames;
    data['followed'] = this.followed;
    data['mvSize'] = this.mvSize;
    data['publishTime'] = this.publishTime;
    data['identifyTag'] = this.identifyTag;
    data['alg'] = this.alg;
    data['fansCount'] = this.fansCount;
    return data;
  }
}
